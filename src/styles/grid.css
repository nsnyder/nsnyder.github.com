:root {
  /* stylelint-disable-next-line length-zero-no-unit */
  --grid-gap-x: 0rem;
  --grid-gap-y: 1rem;
  --grid-padding: 0.5rem;
  --screen-xl: 1280px;
}

.grid-me {
  grid-row: me;
}

.grid-about {
  grid-row: about;
}

.grid-social {
  grid-row: social;
}

.contents {
  display: contents;
}

.gap {
  gap: var(--grid-gap-y) var(--grid-gap-x);
}

.grid-cols-main {
  @apply grid;

  grid-template-columns:
    [full-start] calc(var(--grid-gap-y) - var(--grid-gap-x))
    [content-start] repeat(6, 1fr) [content-end]
    calc(var(--grid-gap-y) - var(--grid-gap-x)) [full-end];
  gap: var(--grid-gap-y) var(--grid-gap-x);
}

.grid-cols-main > * {
  grid-column: content / content-end;
}

@screen lg {
  :root {
    --grid-gap-x: 1rem;
    --grid-gap-y: 2rem;
  }

  .grid-cols-main {
    grid-template-columns:
      [full-start] calc(var(--grid-gap-y) - var(--grid-gap-x))
      [sidebar-start] 12rem [sidebar-end content-start]
      repeat(6, 1fr) [content-end right-start]
      minmax(calc(var(--grid-gap-y) - var(--grid-gap-x)), calc(100vw - var(--screen-xl)))
      [right-end full-end];
  }

  .grid-content-terse {
    grid-column: content / span 4;
  }

  .grid-sidebar {
    grid-column: sidebar;
  }

  .grid-content {
    grid-column: content / content-end;
  }
}

.bleed {
  grid-column: full;
}

/*
  If we have multiple versions of the main grid directly nested,
  bleed the nested grid so that it takes the full page width.
*/
.grid-cols-main > .grid-cols-main {
  @apply bleed;
}

.header-rows {
  grid-template-rows:
    [wip-banner-start full-start] min-content [wip-banner-end]
    1fr
    [me-start] min-content [me-end about-start]
    min-content [about-end]
    1fr
    [social-start] min-content [social-end full-end];
  gap: 0 var(--grid-gap-x);
}

.header-full-height {
  grid-row: full;
}

.header-wip-banner {
  @apply bleed;

  grid-row: wip-banner;
}
